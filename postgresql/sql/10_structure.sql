CREATE TABLE REGION (
  REGION_ID bigint NOT NULL,
  INSEE_ID CHAR(2) NOT NULL,
  NAME VARCHAR(100),
  UPPER_NAME VARCHAR(100),
  CHEFLIEU_INSEE CHAR(5)
);

CREATE SEQUENCE REGION_SEQ START WITH 10 INCREMENT BY 1 CACHE 1;

CREATE FUNCTION TRIGGER_INSERT_REGION_ID () RETURNS TRIGGER
  AS
  $BODY$
  DECLARE
  BEGIN
    if (NEW.REGION_ID is null) then
      NEW.REGION_ID = nextval('REGION_SEQ');
    end if;
    RETURN NEW;
  END
  $BODY$
  LANGUAGE 'plpgsql';


CREATE TRIGGER insert_region_id
  BEFORE INSERT ON REGION
  FOR EACH ROW
  EXECUTE PROCEDURE TRIGGER_INSERT_REGION_ID();

ALTER TABLE ONLY REGION
  ADD CONSTRAINT PK_REGION PRIMARY KEY (REGION_ID);

CREATE UNIQUE INDEX UX_REGION_INSEE ON REGION(INSEE_ID);

CREATE UNIQUE INDEX UX_REGION_CHEFLIEU ON REGION(INSEE_ID, CHEFLIEU_INSEE);

CREATE TABLE DISTRICT (
  DISTRICT_ID BIGINT NOT NULL ,
  INSEE_ID CHAR(5) ,
  NAME VARCHAR(100),
  UPPER_NAME VARCHAR(100),
  CHEFLIEU_INSEE CHAR(5),
  REGION_REGION_INSEE CHAR(2)
);

CREATE SEQUENCE DISTRICT_SEQ START WITH 10 INCREMENT BY 1 CACHE 1;

CREATE FUNCTION TRIGGER_INSERT_DISTRICT_ID () RETURNS TRIGGER
AS
$BODY$
DECLARE
BEGIN
  if (NEW.DISTRICT_ID is null) then
    NEW.DISTRICT_ID = nextval('DISTRICT_SEQ');
  end if;
  RETURN NEW;
END
$BODY$
LANGUAGE 'plpgsql';

CREATE TRIGGER insert_district_id
BEFORE INSERT ON DISTRICT
FOR EACH ROW
EXECUTE PROCEDURE TRIGGER_INSERT_DISTRICT_ID();

ALTER TABLE ONLY DISTRICT
  ADD CONSTRAINT PK_DISTRICT PRIMARY KEY (DISTRICT_ID);

CREATE UNIQUE INDEX UX_DISTRICT_INSEE ON DISTRICT(INSEE_ID);

CREATE UNIQUE INDEX UX_DISTRICT_CHEFLIEU ON DISTRICT(INSEE_ID, CHEFLIEU_INSEE);

CREATE INDEX IX_DISTRICT_REGION on DISTRICT(INSEE_ID, REGION_REGION_INSEE);

ALTER TABLE ONLY DISTRICT
    ADD CONSTRAINT FK_DISTRICT_REGION FOREIGN KEY (REGION_REGION_INSEE) REFERENCES REGION(INSEE_ID) ;

CREATE TABLE CITYSTATUS (
  CITYSTATUS_ID BIGINT NOT NULL,
  LABEL VARCHAR(100)
);

ALTER TABLE ONLY citystatus
    ADD CONSTRAINT PK_CITYSTATUS PRIMARY KEY (CITYSTATUS_ID);

CREATE INDEX UX_CITYSTATUS ON citystatus(label) ;

CREATE TABLE CITY (
  CITY_ID             BIGINT NOT NULL,
  INSEE_ID            CHAR(5),
  NAME                VARCHAR(100),
  CITYSTATUS_ID       BIGINT NOT NULL,
  CITY_DISTRICT_INSEE CHAR(5),
  CITY_REGION_INSEE   CHAR(2)
);


CREATE SEQUENCE SEQ_CITY START WITH 10 INCREMENT 1 CACHE 1;

CREATE OR REPLACE FUNCTION TRIGGER_INSERT_CITY_ID()
  RETURNS TRIGGER
AS
$BODY$
BEGIN
  IF (NEW.CITY_ID IS NULL)
  THEN
    NEW.CITY_ID = nextval('SEQ_CITY');
  END IF;
  RETURN NEW;
END
$BODY$
LANGUAGE 'plpgsql';

CREATE TRIGGER insert_city_id
BEFORE INSERT ON CITY
FOR EACH ROW
EXECUTE PROCEDURE TRIGGER_INSERT_CITY_ID();

ALTER TABLE ONLY CITY
  ADD CONSTRAINT PK_CITY PRIMARY KEY (CITY_ID);

CREATE UNIQUE INDEX UX_CITY_INSEE
  ON CITY (INSEE_ID);

CREATE INDEX IX_CITYNAME
  ON CITY (NAME);

ALTER TABLE ONLY CITY
  ADD CONSTRAINT FK_CITY_DISTRICT FOREIGN KEY (CITY_DISTRICT_INSEE)
REFERENCES DISTRICT (INSEE_ID);

ALTER TABLE ONLY CITY
  ADD CONSTRAINT FK_CITY_REGION FOREIGN KEY (CITY_REGION_INSEE)
REFERENCES REGION (INSEE_ID);

ALTER TABLE ONLY CITY
  ADD CONSTRAINT PF_CITY_CITYSTATUS FOREIGN KEY (citystatus_id)
REFERENCES CITYSTATUS (citystatus_id);

